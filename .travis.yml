# This is a special configuration file to run tests on Travis-CI via
# GitHub notifications when changes are committed.
#
# For technical details, see http://travis-ci.org/ and this blog post
# for background,
# http://blastedbio.blogspot.com/2013/09/using-travis-ci-for-testing-galaxy-tools.html

# Galaxy currently only supports Python 2.7
language: python
cache: pip
jobs:
  include:
    - stage: test
      python: "2.7"
      env: GALAXY_BRANCH=master
    - stage: test
      python: "2.7"
      env: GALAXY_BRANCH=dev
    - stage: deploy
      before_install:
        - echo "Since the tests passed, will deploy to the Test Tool Shed"
      install:
        - pip install --upgrade pip setuptools
        - pip install planemo
      script:
        - if [ "$TTS_KEY" == "" ]; then echo "Missing Test Tool Shed API key in environment variable TTS_KEY"; false; fi
        - if [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TRAVIS_BRANCH" == "master" ]; then planemo shed_update --shed_target testtoolshed --check_diff --shed_key_from_env TTS_KEY .; true; fi

# Deployment
# ==========
# This is done with the new TravisCI stages feature, see
# https://blog.travis-ci.com/2017-05-11-introducing-build-stages
#
# Assumes you have set $TTS_KEY in the TravisCI interface,
# and that the test stage passed.
#
# As the deploy is run on a new VM, remove black-listed tools.
#
# Note use of "true" after the "planemo shed_update" which is
# a work-around for a Tool Shed administration rights issue, see
# https://github.com/galaxyproject/planemo/issues/543
#
#
# Planemo Lint
# ============
#
# Planemo can be run to check tools separately from Galaxy, and this
# is fast so we do it *before* the slow process of installing Galaxy
# and running the tool tests.
#
#
# Installing Tool Dependencies
# ============================
#
# Galaxy should handle this via conda.

before_install:
 - "if grep -P '\t' *.rst; then echo 'Tabs are bad, please use four spaces in RST files.'; false; fi"
 - "if grep -P '\t' *.xml; then echo 'Tabs are bad, please use four spaces in XML files.'; false; fi"
 - "if grep -P '\t' .shed.yml; then echo 'Tabs are bad, please use four spaces in shed YAML files.'; false; fi"
 - "if grep -n -r '[[:blank:]]$' *.rst; then echo 'Please remove trailing whitespace in RST files.'; false; fi"
 - "if grep -n -r '[[:blank:]]$' *.xml; then echo 'Please remove trailing whitespace in XML files.'; false; fi"
 - "if grep -n -r '[[:blank:]]$' .shed.yml; then echo 'Please remove trailing whitespace in shed YAML files.'; false; fi"
 - pip install --upgrade pip setuptools
 - pip install restructuredtext-lint
 - echo "Using restructuredtext-lint to check our RST files"
 - restructuredtext-lint *.rst
 - pip install planemo
 - echo "Using planemo lint to check for obvious tool errors"
 - planemo shed_lint --tools --fail_level error --ensure_metadata -r ${TRAVIS_BUILD_DIR}


install:
 - export PLANEMO_CONDA_PREFIX="$HOME/conda"
 - planemo conda_init
 - export PATH="$PLANEMO_CONDA_PREFIX/bin:$PATH"
 - conda install -y -c conda-forge conda=4.3.34
 - conda --version


# Testing tools in Galaxy
# =======================
#
# Now just call planemo test - which should setup Galaxy and
# handle our tool dependencies via conda

script:
 - cd ${TRAVIS_BUILD_DIR}
 - planemo --version
 - export GALAXY_REPO=https://github.com/peterjc/galaxy
 - if [ "${GALAXY_BRANCH}" == "dev" ] then export GALAXY_BRANCH=kk_db; fi
 - planemo test --conda_dependency_resolution --conda_auto_install --conda_channels iuc,bioconda,conda-forge,defaults --galaxy_branch "${GALAXY_BRANCH}" --galaxy_source "$GALAXY_REPO" .

notifications:
  email: false
